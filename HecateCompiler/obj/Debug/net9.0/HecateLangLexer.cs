//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\clion_projects\C#\HecateCompiler\HecateCompiler\HecateLang.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HecateCompiler {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HecateLangLexer : Lexer {
	public const int
		INT=1, FLOAT=2, DOUBLE=3, STRING_TYPE=4, VOID=5, IF=6, ELSE=7, FOR=8, 
		WHILE=9, RETURN=10, ID=11, NUMBER=12, STRING=13, PLUS=14, MINUS=15, STAR=16, 
		SLASH=17, PLUS_PLUS=18, MINUS_MINUS=19, LT=20, GT=21, LE=22, GE=23, EQUAL=24, 
		NE=25, AND=26, OR=27, NOT=28, ASSIGN=29, PLUS_ASSIGN=30, MINUS_ASSIGN=31, 
		STAR_ASSIGN=32, SLASH_ASSIGN=33, LPAREN=34, RPAREN=35, LBRACE=36, RBRACE=37, 
		SEMICOLON=38, COMMA=39, COMMENT=40, BLOCK_COMMENT=41, WS=42;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INT", "FLOAT", "DOUBLE", "STRING_TYPE", "VOID", "IF", "ELSE", "FOR", 
		"WHILE", "RETURN", "ID", "NUMBER", "STRING", "PLUS", "MINUS", "STAR", 
		"SLASH", "PLUS_PLUS", "MINUS_MINUS", "LT", "GT", "LE", "GE", "EQUAL", 
		"NE", "AND", "OR", "NOT", "ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "STAR_ASSIGN", 
		"SLASH_ASSIGN", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMICOLON", "COMMA", 
		"COMMENT", "BLOCK_COMMENT", "WS"
	};


	public HecateLangLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'int'", "'float'", "'double'", "'string'", "'void'", "'if'", "'else'", 
		"'for'", "'while'", "'return'", null, null, null, "'+'", "'-'", "'*'", 
		"'/'", "'++'", "'--'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", 
		"'||'", "'!'", "'='", "'+='", "'-='", "'*='", "'/='", "'('", "')'", "'{'", 
		"'}'", "';'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INT", "FLOAT", "DOUBLE", "STRING_TYPE", "VOID", "IF", "ELSE", "FOR", 
		"WHILE", "RETURN", "ID", "NUMBER", "STRING", "PLUS", "MINUS", "STAR", 
		"SLASH", "PLUS_PLUS", "MINUS_MINUS", "LT", "GT", "LE", "GE", "EQUAL", 
		"NE", "AND", "OR", "NOT", "ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "STAR_ASSIGN", 
		"SLASH_ASSIGN", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMICOLON", "COMMA", 
		"COMMENT", "BLOCK_COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HecateLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2,\x10F\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3"+
		"\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3"+
		"\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\a\f\x90\n\f\f\f\xE\f\x93\v\f\x3"+
		"\r\x5\r\x96\n\r\x3\r\x6\r\x99\n\r\r\r\xE\r\x9A\x3\r\x3\r\x6\r\x9F\n\r"+
		"\r\r\xE\r\xA0\x5\r\xA3\n\r\x3\xE\x3\xE\x3\xE\x3\xE\a\xE\xA9\n\xE\f\xE"+
		"\xE\xE\xAC\v\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3"+
		"\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3"+
		"\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3"+
		"\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3!\x3!\x3"+
		"!\x3\"\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3"+
		")\x3)\x3)\x3)\a)\xF4\n)\f)\xE)\xF7\v)\x3)\x3)\x3*\x3*\x3*\x3*\a*\xFF\n"+
		"*\f*\xE*\x102\v*\x3*\x3*\x3*\x3*\x3*\x3+\x6+\x10A\n+\r+\xE+\x10B\x3+\x3"+
		"+\x3\x100\x2\x2,\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2"+
		"+U\x2,\x3\x2\t\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|"+
		"\x5\x2--//\x31\x31\x3\x2\x32;\x6\x2\f\f\xF\xF$$^^\x4\x2\f\f\xF\xF\x5\x2"+
		"\v\f\xF\xF\"\"\x118\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2"+
		"\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2"+
		"\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3"+
		"\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2"+
		"\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'"+
		"\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2"+
		"\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37"+
		"\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3"+
		"\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2"+
		"G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2"+
		"\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x3W\x3\x2\x2\x2"+
		"\x5[\x3\x2\x2\x2\a\x61\x3\x2\x2\x2\th\x3\x2\x2\x2\vo\x3\x2\x2\x2\rt\x3"+
		"\x2\x2\x2\xFw\x3\x2\x2\x2\x11|\x3\x2\x2\x2\x13\x80\x3\x2\x2\x2\x15\x86"+
		"\x3\x2\x2\x2\x17\x8D\x3\x2\x2\x2\x19\x95\x3\x2\x2\x2\x1B\xA4\x3\x2\x2"+
		"\x2\x1D\xAF\x3\x2\x2\x2\x1F\xB1\x3\x2\x2\x2!\xB3\x3\x2\x2\x2#\xB5\x3\x2"+
		"\x2\x2%\xB7\x3\x2\x2\x2\'\xBA\x3\x2\x2\x2)\xBD\x3\x2\x2\x2+\xBF\x3\x2"+
		"\x2\x2-\xC1\x3\x2\x2\x2/\xC4\x3\x2\x2\x2\x31\xC7\x3\x2\x2\x2\x33\xCA\x3"+
		"\x2\x2\x2\x35\xCD\x3\x2\x2\x2\x37\xD0\x3\x2\x2\x2\x39\xD3\x3\x2\x2\x2"+
		";\xD5\x3\x2\x2\x2=\xD7\x3\x2\x2\x2?\xDA\x3\x2\x2\x2\x41\xDD\x3\x2\x2\x2"+
		"\x43\xE0\x3\x2\x2\x2\x45\xE3\x3\x2\x2\x2G\xE5\x3\x2\x2\x2I\xE7\x3\x2\x2"+
		"\x2K\xE9\x3\x2\x2\x2M\xEB\x3\x2\x2\x2O\xED\x3\x2\x2\x2Q\xEF\x3\x2\x2\x2"+
		"S\xFA\x3\x2\x2\x2U\x109\x3\x2\x2\x2WX\ak\x2\x2XY\ap\x2\x2YZ\av\x2\x2Z"+
		"\x4\x3\x2\x2\x2[\\\ah\x2\x2\\]\an\x2\x2]^\aq\x2\x2^_\a\x63\x2\x2_`\av"+
		"\x2\x2`\x6\x3\x2\x2\x2\x61\x62\a\x66\x2\x2\x62\x63\aq\x2\x2\x63\x64\a"+
		"w\x2\x2\x64\x65\a\x64\x2\x2\x65\x66\an\x2\x2\x66g\ag\x2\x2g\b\x3\x2\x2"+
		"\x2hi\au\x2\x2ij\av\x2\x2jk\at\x2\x2kl\ak\x2\x2lm\ap\x2\x2mn\ai\x2\x2"+
		"n\n\x3\x2\x2\x2op\ax\x2\x2pq\aq\x2\x2qr\ak\x2\x2rs\a\x66\x2\x2s\f\x3\x2"+
		"\x2\x2tu\ak\x2\x2uv\ah\x2\x2v\xE\x3\x2\x2\x2wx\ag\x2\x2xy\an\x2\x2yz\a"+
		"u\x2\x2z{\ag\x2\x2{\x10\x3\x2\x2\x2|}\ah\x2\x2}~\aq\x2\x2~\x7F\at\x2\x2"+
		"\x7F\x12\x3\x2\x2\x2\x80\x81\ay\x2\x2\x81\x82\aj\x2\x2\x82\x83\ak\x2\x2"+
		"\x83\x84\an\x2\x2\x84\x85\ag\x2\x2\x85\x14\x3\x2\x2\x2\x86\x87\at\x2\x2"+
		"\x87\x88\ag\x2\x2\x88\x89\av\x2\x2\x89\x8A\aw\x2\x2\x8A\x8B\at\x2\x2\x8B"+
		"\x8C\ap\x2\x2\x8C\x16\x3\x2\x2\x2\x8D\x91\t\x2\x2\x2\x8E\x90\t\x3\x2\x2"+
		"\x8F\x8E\x3\x2\x2\x2\x90\x93\x3\x2\x2\x2\x91\x8F\x3\x2\x2\x2\x91\x92\x3"+
		"\x2\x2\x2\x92\x18\x3\x2\x2\x2\x93\x91\x3\x2\x2\x2\x94\x96\t\x4\x2\x2\x95"+
		"\x94\x3\x2\x2\x2\x95\x96\x3\x2\x2\x2\x96\x98\x3\x2\x2\x2\x97\x99\t\x5"+
		"\x2\x2\x98\x97\x3\x2\x2\x2\x99\x9A\x3\x2\x2\x2\x9A\x98\x3\x2\x2\x2\x9A"+
		"\x9B\x3\x2\x2\x2\x9B\xA2\x3\x2\x2\x2\x9C\x9E\a\x30\x2\x2\x9D\x9F\t\x5"+
		"\x2\x2\x9E\x9D\x3\x2\x2\x2\x9F\xA0\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2\xA0"+
		"\xA1\x3\x2\x2\x2\xA1\xA3\x3\x2\x2\x2\xA2\x9C\x3\x2\x2\x2\xA2\xA3\x3\x2"+
		"\x2\x2\xA3\x1A\x3\x2\x2\x2\xA4\xAA\a$\x2\x2\xA5\xA9\n\x6\x2\x2\xA6\xA7"+
		"\a^\x2\x2\xA7\xA9\v\x2\x2\x2\xA8\xA5\x3\x2\x2\x2\xA8\xA6\x3\x2\x2\x2\xA9"+
		"\xAC\x3\x2\x2\x2\xAA\xA8\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2\xAB\xAD\x3\x2"+
		"\x2\x2\xAC\xAA\x3\x2\x2\x2\xAD\xAE\a$\x2\x2\xAE\x1C\x3\x2\x2\x2\xAF\xB0"+
		"\a-\x2\x2\xB0\x1E\x3\x2\x2\x2\xB1\xB2\a/\x2\x2\xB2 \x3\x2\x2\x2\xB3\xB4"+
		"\a,\x2\x2\xB4\"\x3\x2\x2\x2\xB5\xB6\a\x31\x2\x2\xB6$\x3\x2\x2\x2\xB7\xB8"+
		"\a-\x2\x2\xB8\xB9\a-\x2\x2\xB9&\x3\x2\x2\x2\xBA\xBB\a/\x2\x2\xBB\xBC\a"+
		"/\x2\x2\xBC(\x3\x2\x2\x2\xBD\xBE\a>\x2\x2\xBE*\x3\x2\x2\x2\xBF\xC0\a@"+
		"\x2\x2\xC0,\x3\x2\x2\x2\xC1\xC2\a>\x2\x2\xC2\xC3\a?\x2\x2\xC3.\x3\x2\x2"+
		"\x2\xC4\xC5\a@\x2\x2\xC5\xC6\a?\x2\x2\xC6\x30\x3\x2\x2\x2\xC7\xC8\a?\x2"+
		"\x2\xC8\xC9\a?\x2\x2\xC9\x32\x3\x2\x2\x2\xCA\xCB\a#\x2\x2\xCB\xCC\a?\x2"+
		"\x2\xCC\x34\x3\x2\x2\x2\xCD\xCE\a(\x2\x2\xCE\xCF\a(\x2\x2\xCF\x36\x3\x2"+
		"\x2\x2\xD0\xD1\a~\x2\x2\xD1\xD2\a~\x2\x2\xD2\x38\x3\x2\x2\x2\xD3\xD4\a"+
		"#\x2\x2\xD4:\x3\x2\x2\x2\xD5\xD6\a?\x2\x2\xD6<\x3\x2\x2\x2\xD7\xD8\a-"+
		"\x2\x2\xD8\xD9\a?\x2\x2\xD9>\x3\x2\x2\x2\xDA\xDB\a/\x2\x2\xDB\xDC\a?\x2"+
		"\x2\xDC@\x3\x2\x2\x2\xDD\xDE\a,\x2\x2\xDE\xDF\a?\x2\x2\xDF\x42\x3\x2\x2"+
		"\x2\xE0\xE1\a\x31\x2\x2\xE1\xE2\a?\x2\x2\xE2\x44\x3\x2\x2\x2\xE3\xE4\a"+
		"*\x2\x2\xE4\x46\x3\x2\x2\x2\xE5\xE6\a+\x2\x2\xE6H\x3\x2\x2\x2\xE7\xE8"+
		"\a}\x2\x2\xE8J\x3\x2\x2\x2\xE9\xEA\a\x7F\x2\x2\xEAL\x3\x2\x2\x2\xEB\xEC"+
		"\a=\x2\x2\xECN\x3\x2\x2\x2\xED\xEE\a.\x2\x2\xEEP\x3\x2\x2\x2\xEF\xF0\a"+
		"\x31\x2\x2\xF0\xF1\a\x31\x2\x2\xF1\xF5\x3\x2\x2\x2\xF2\xF4\n\a\x2\x2\xF3"+
		"\xF2\x3\x2\x2\x2\xF4\xF7\x3\x2\x2\x2\xF5\xF3\x3\x2\x2\x2\xF5\xF6\x3\x2"+
		"\x2\x2\xF6\xF8\x3\x2\x2\x2\xF7\xF5\x3\x2\x2\x2\xF8\xF9\b)\x2\x2\xF9R\x3"+
		"\x2\x2\x2\xFA\xFB\a\x31\x2\x2\xFB\xFC\a,\x2\x2\xFC\x100\x3\x2\x2\x2\xFD"+
		"\xFF\v\x2\x2\x2\xFE\xFD\x3\x2\x2\x2\xFF\x102\x3\x2\x2\x2\x100\x101\x3"+
		"\x2\x2\x2\x100\xFE\x3\x2\x2\x2\x101\x103\x3\x2\x2\x2\x102\x100\x3\x2\x2"+
		"\x2\x103\x104\a,\x2\x2\x104\x105\a\x31\x2\x2\x105\x106\x3\x2\x2\x2\x106"+
		"\x107\b*\x2\x2\x107T\x3\x2\x2\x2\x108\x10A\t\b\x2\x2\x109\x108\x3\x2\x2"+
		"\x2\x10A\x10B\x3\x2\x2\x2\x10B\x109\x3\x2\x2\x2\x10B\x10C\x3\x2\x2\x2"+
		"\x10C\x10D\x3\x2\x2\x2\x10D\x10E\b+\x2\x2\x10EV\x3\x2\x2\x2\r\x2\x91\x95"+
		"\x9A\xA0\xA2\xA8\xAA\xF5\x100\x10B\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace HecateCompiler
